{
  "__inputs": [
    {
      "name": "DS_INFLUXDB_V2_FLUX",
      "label": "InfluxDB_v2_Flux",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.3.6"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 12,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 4,
            "x": 0,
            "y": 17
          },
          "id": 14,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "9.3.6",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "import \"influxdata/influxdb/v1\"\nv1.tagValues(\n    bucket: \"build-scans\",\n    tag: \"project\",\n    predicate: (r) => true,\n    start: v.timeRangeStart, \n    stop: v.timeRangeStop\n)\n|> count()\n",
              "refId": "A"
            }
          ],
          "title": "Project Count (with cache savings)",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 4,
            "x": 4,
            "y": 17
          },
          "id": 16,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "9.3.6",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"build\")\n  |> filter(fn: (r) => r[\"_field\"] == \"cache_avoidance_savings_ms\")\n  |> group(columns: [\"_field\"])\n  |> sum()\n",
              "refId": "A"
            }
          ],
          "title": "Cache Savings",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 4,
            "x": 8,
            "y": 17
          },
          "id": 17,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "9.3.6",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"build\")\n  |> filter(fn: (r) => r[\"_field\"] == \"duration_ms\")\n  |> group(columns: [\"_field\"])\n  |> sum()\n",
              "refId": "A"
            }
          ],
          "title": "Build Time (with cache savings)",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 4,
            "x": 12,
            "y": 17
          },
          "id": 15,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "9.3.6",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"build\")\n  |> count()  \n  |> group(columns: [\"_field\"])\n  |> filter(fn: (r) => r[\"_field\"] == \"build_id\")\n  |> sum()\n\n",
              "refId": "A"
            }
          ],
          "title": "Build Count (with cache savings)",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 4,
            "x": 16,
            "y": 17
          },
          "id": 18,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/.*/",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "9.3.6",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"cache\")\n    |> filter(fn: (r) => r[\"_field\"] == \"serial_clock_savings_rate\")\n    |> filter(fn: (r) => r[\"_value\"] >= 10)\n    |> mean()\n    |> group(columns: [\"_field\"])\n    |> count()\n",
              "refId": "A"
            }
          ],
          "title": "Project Count with cache savings > 10%",
          "type": "stat"
        }
      ],
      "title": "Overall",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 26,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 18
          },
          "id": 24,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    r._field == \"build_id\" and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> drop(columns: [\"isCi\", \"duration_ms\", \"cache_avoidance_savings_ms\", \"test_distribution_savings_ms\"])\n  |> aggregateWindow(every: 24h, fn: count)\n  |> group(columns: [\"_time\"])\n  |> sum(column: \"_value\")\n  |> duplicate(column: \"_time\", as: \"_start\")  \n  |> group()\n  |> rename(columns: {_value: \"total\"})",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "hide": false,
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    r._field == \"is_ci\" and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> group()\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == true)  \n  |> map(fn: (r) => ({r with _value: r.is_ci}))\n  |> aggregateWindow(every: 24h, fn: count)\n  |> drop(columns: [\"_start\", \"_stop\"])\n  |> rename(columns: {_value: \"CI\"})",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "hide": false,
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    r._field == \"is_ci\" and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> group()\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == false)  \n  |> map(fn: (r) => ({r with _value: r.is_ci}))\n  |> aggregateWindow(every: 24h, fn: count)\n  |> drop(columns: [\"_start\", \"_stop\"])\n  |> rename(columns: {_value: \"local\"})",
              "refId": "C"
            }
          ],
          "title": "Build count",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 7,
            "x": 8,
            "y": 18
          },
          "id": 7,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    r._field == \"duration_ms\" and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> drop(columns: [\"isCi\", \"build_id\", \"cache_avoidance_savings_ms\", \"test_distribution_savings_ms\"])\n  |> aggregateWindow(every: 24h, fn: sum)\n  |> group(columns: [\"_time\"])\n  |> sum(column: \"_value\")\n  |> duplicate(column: \"_time\", as: \"_start\")  \n  |> group()\n  |> rename(columns: {_value: \"total\"})",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "hide": false,
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"duration_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == true)  \n  |> map(fn: (r) => ({r with _value: r.duration_ms}))\n  |> group()\n  |> aggregateWindow(every: 24h, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"CI\"})",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "hide": false,
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"duration_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == false)  \n  |> map(fn: (r) => ({r with _value: r.duration_ms}))\n  |> group()\n  |> aggregateWindow(every: 24h, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"local\"})",
              "refId": "C"
            }
          ],
          "title": "Build Duration",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 15,
            "y": 18
          },
          "id": 21,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    r._field == \"cache_avoidance_savings_ms\" and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> drop(columns: [\"isCi\", \"build_id\", \"duration_ms\", \"test_distribution_savings_ms\"])\n  |> aggregateWindow(every: 24h, fn: sum)\n  |> group(columns: [\"_time\"])\n  |> sum(column: \"_value\")\n  |> duplicate(column: \"_time\", as: \"_start\")  \n  |> group()\n",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "hide": false,
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"cache_avoidance_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == true)  \n  |> map(fn: (r) => ({r with _value: r.cache_avoidance_savings_ms}))\n  |> group()\n  |> aggregateWindow(every: 24h, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"CI\"})",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "hide": false,
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"cache_avoidance_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == false)  \n  |> map(fn: (r) => ({r with _value: r.cache_avoidance_savings_ms}))\n  |> group()\n  |> aggregateWindow(every: 24h, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"local\"})",
              "refId": "C"
            }
          ],
          "title": "Build Cache Savings",
          "type": "timeseries"
        }
      ],
      "title": "Global Trends",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 10,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 34
          },
          "id": 19,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    r._field == \"build_id\" and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> drop(columns: [\"isCi\", \"duration_ms\", \"cache_avoidance_savings_ms\", \"test_distribution_savings_ms\"])\n  |> aggregateWindow(every: 24h, fn: count)\n",
              "refId": "A"
            }
          ],
          "title": "Build count by project",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 7,
            "x": 8,
            "y": 34
          },
          "id": 20,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    r._field == \"duration_ms\" and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> drop(columns: [\"isCi\", \"build_id\", \"cache_avoidance_savings_ms\", \"test_distribution_savings_ms\"])\n  |> aggregateWindow(every: 24h, fn: sum)\n",
              "refId": "A"
            }
          ],
          "title": "Build Duration by project",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 15,
            "y": 34
          },
          "id": 8,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    r._field == \"cache_avoidance_savings_ms\" and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> drop(columns: [\"isCi\", \"build_id\", \"duration_ms\", \"test_distribution_savings_ms\"])\n  |> aggregateWindow(every: 24h, fn: sum)\n",
              "refId": "A"
            }
          ],
          "title": "Build Cache Savings by project",
          "type": "timeseries"
        }
      ],
      "title": "Trends by project",
      "type": "row"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 29,
      "panels": [],
      "title": "ROI",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB_V2_FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "orange",
                "value": 16000
              },
              {
                "color": "green",
                "value": 21000
              }
            ]
          },
          "unit": "currencyEUR"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 4
      },
      "id": 27,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"total_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> map(fn: (r) => ({r with _value: float(v: r.total_savings_ms) / 1000.0 / 60.0 / 60.0 * 50.63 * (if r.is_ci then 0.2 else 0.8)}))\n  |> group()\n  |> aggregateWindow(every: 1w, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"total\"})",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "hide": false,
          "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"total_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == true)  \n  |> map(fn: (r) => ({r with _value: float(v: r.total_savings_ms) / 1000.0 / 60.0 / 60.0 * 50.63 * (if r.is_ci then 0.2 else 0.8)}))\n  |> group()\n  |> aggregateWindow(every: 1w, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"CI\"})",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "hide": false,
          "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"total_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == false)  \n  |> map(fn: (r) => ({r with _value: float(v: r.total_savings_ms) / 1000.0 / 60.0 / 60.0 * 50.63 * (if r.is_ci then 0.2 else 0.8)}))\n  |> group()\n  |> aggregateWindow(every: 1w, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"local\"})",
          "refId": "C"
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB_V2_FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "orange",
                "value": 16000
              },
              {
                "color": "green",
                "value": 21000
              }
            ]
          },
          "unit": "currencyEUR"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 4
      },
      "id": 32,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.3.6",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"total_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> map(fn: (r) => ({r with _value: float(v: r.total_savings_ms) / 1000.0 / 60.0 / 60.0 * 50.63 * (if r.is_ci then 0.2 else 0.8)}))\n  |> group()\n  |> aggregateWindow(every: 1w, fn: sum)\n  |> mean()\n",
          "refId": "A"
        }
      ],
      "title": "AVG weekly ROI",
      "type": "stat"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 34,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "dashed"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "orange",
                    "value": 16000
                  },
                  {
                    "color": "green",
                    "value": 21000
                  }
                ]
              },
              "unit": "currencyEUR"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 13
          },
          "id": 30,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"cache_avoidance_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> map(fn: (r) => ({r with _value: float(v: r.cache_avoidance_savings_ms) / 1000.0 / 60.0 / 60.0 * 50.63 * (if r.is_ci then 0.2 else 0.8)}))\n  |> group()\n  |> aggregateWindow(every: 1w, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"total\"})",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "hide": false,
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"cache_avoidance_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == true)  \n  |> map(fn: (r) => ({r with _value: float(v: r.cache_avoidance_savings_ms) / 1000.0 / 60.0 / 60.0 * 50.63 * (if r.is_ci then 0.2 else 0.8)}))\n  |> group()\n  |> aggregateWindow(every: 1w, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"CI\"})",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "hide": false,
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"cache_avoidance_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == false)  \n  |> map(fn: (r) => ({r with _value: float(v: r.cache_avoidance_savings_ms) / 1000.0 / 60.0 / 60.0 * 50.63 * (if r.is_ci then 0.2 else 0.8)}))\n  |> group()\n  |> aggregateWindow(every: 1w, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"local\"})",
              "refId": "C"
            }
          ],
          "title": "Cache",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB_V2_FLUX}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "dashed"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "orange",
                    "value": 16000
                  },
                  {
                    "color": "green",
                    "value": 21000
                  }
                ]
              },
              "unit": "currencyEUR"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 21
          },
          "id": 31,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"test_distribution_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> map(fn: (r) => ({r with _value: float(v: r.test_distribution_savings_ms) / 1000.0 / 60.0 / 60.0 * 50.63 * (if r.is_ci then 0.2 else 0.8)}))\n  |> group()\n  |> aggregateWindow(every: 1w, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"total\"})",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "hide": false,
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"test_distribution_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == true)  \n  |> map(fn: (r) => ({r with _value: float(v: r.test_distribution_savings_ms) / 1000.0 / 60.0 / 60.0 * 50.63 * (if r.is_ci then 0.2 else 0.8)}))\n  |> group()\n  |> aggregateWindow(every: 1w, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"CI\"})",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB_V2_FLUX}"
              },
              "hide": false,
              "query": "from(bucket: \"build-scans\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"build\" and\n    (r._field == \"test_distribution_savings_ms\" or r._field == \"is_ci\") and\n    (contains(value: r.project, set: ${project:json}) or contains(value: \"all\", set: ${project:json}))\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r.is_ci == false)  \n  |> map(fn: (r) => ({r with _value: float(v: r.test_distribution_savings_ms) / 1000.0 / 60.0 / 60.0 * 50.63 * (if r.is_ci then 0.2 else 0.8)}))\n  |> group()\n  |> aggregateWindow(every: 1w, fn: sum)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> rename(columns: {_value: \"local\"})",
              "refId": "C"
            }
          ],
          "title": "Test Distribution",
          "type": "timeseries"
        }
      ],
      "title": "ROI detail",
      "type": "row"
    }
  ],
  "refresh": false,
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": "[\"all\"]",
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB_V2_FLUX}"
        },
        "definition": "import \"influxdata/influxdb/v1\"\nv1.tagValues(\n    bucket: \"build-scans\",\n    tag: \"project\",\n    predicate: (r) => r.project != \"all\",\n    start: v.timeRangeStart, \n    stop: v.timeRangeStop\n)",
        "hide": 0,
        "includeAll": true,
        "label": "Project",
        "multi": true,
        "name": "project",
        "options": [],
        "query": "import \"influxdata/influxdb/v1\"\nv1.tagValues(\n    bucket: \"build-scans\",\n    tag: \"project\",\n    predicate: (r) => r.project != \"all\",\n    start: v.timeRangeStart, \n    stop: v.timeRangeStop\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 5,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2025-06-15T22:00:00.000Z",
    "to": "2025-09-10T21:59:59.000Z"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Develocity Savings - imported",
  "uid": "-0307T9Nk1",
  "version": 1,
  "weekStart": ""
}